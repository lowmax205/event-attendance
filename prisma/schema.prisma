generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  passwordHash  String
  role          Role          @default(Student)
  accountStatus String        @default("active")
  emailVerified Boolean       @default(false)
  createdAt     DateTime      @default(now())
  lastLoginAt   DateTime?
  firstName     String
  lastName      String
  securityLogs  SecurityLog[]
  sessions      Session[]
  profile       UserProfile?

  @@index([email])
}

model UserProfile {
  id            String   @id @default(cuid())
  userId        String   @unique
  section       String?
  department    String
  updatedAt     DateTime @updatedAt
  contactNumber String?
  createdAt     DateTime @default(now())
  studentId     String   @unique
  yearLevel     Int
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  refreshToken String   @unique
  ipAddress    String?
  userAgent    String?
  createdAt    DateTime @default(now())
  expiresAt    DateTime
  isRevoked    Boolean  @default(false)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([refreshToken])
}

model SecurityLog {
  id        String   @id @default(cuid())
  userId    String?
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  action    String
  metadata  Json?
  user      User?    @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
  @@index([action, createdAt])
  @@index([createdAt])
}

enum Role {
  Student
  Moderator
  Administrator
}
