{
  "operation": "event-update",
  "description": "Update existing event details",
  "method": "PATCH",
  "endpoint": "/api/events/[id]",
  "authentication": "Required (Moderator or Administrator role)",
  "requestSchema": {
    "type": "object",
    "required": [],
    "properties": {
      "name": {
        "type": "string",
        "minLength": 3,
        "maxLength": 200,
        "description": "Event name",
        "example": "Spring 2025 Seminar - Updated"
      },
      "description": {
        "type": "string",
        "maxLength": 2000,
        "description": "Event description"
      },
      "startDateTime": {
        "type": "string",
        "format": "date-time",
        "description": "Event start time"
      },
      "endDateTime": {
        "type": "string",
        "format": "date-time",
        "description": "Event end time"
      },
      "venueLatitude": {
        "type": "number",
        "minimum": -90,
        "maximum": 90,
        "description": "Venue GPS latitude"
      },
      "venueLongitude": {
        "type": "number",
        "minimum": -180,
        "maximum": 180,
        "description": "Venue GPS longitude"
      },
      "venueName": {
        "type": "string",
        "maxLength": 200,
        "description": "Venue name"
      },
      "venueAddress": {
        "type": "string",
        "maxLength": 500,
        "description": "Venue address"
      },
      "checkInBufferMins": {
        "type": "integer",
        "minimum": 0,
        "maximum": 240,
        "description": "Minutes before startDateTime when check-in opens"
      },
      "checkOutBufferMins": {
        "type": "integer",
        "minimum": 0,
        "maximum": 240,
        "description": "Minutes after endDateTime when check-out closes"
      },
      "status": {
        "type": "string",
        "enum": ["Active", "Completed", "Cancelled"],
        "description": "Event status"
      }
    }
  },
  "responseSchema": {
    "type": "object",
    "required": [
      "id",
      "name",
      "startDateTime",
      "endDateTime",
      "status",
      "qrCodeUrl",
      "qrCodePayload"
    ],
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "description": {
        "type": "string",
        "nullable": true
      },
      "startDateTime": {
        "type": "string",
        "format": "date-time"
      },
      "endDateTime": {
        "type": "string",
        "format": "date-time"
      },
      "venueLatitude": {
        "type": "number"
      },
      "venueLongitude": {
        "type": "number"
      },
      "venueName": {
        "type": "string"
      },
      "venueAddress": {
        "type": "string",
        "nullable": true
      },
      "checkInBufferMins": {
        "type": "integer"
      },
      "checkOutBufferMins": {
        "type": "integer"
      },
      "qrCodeUrl": {
        "type": "string",
        "format": "uri",
        "description": "Cloudinary URL for QR code image"
      },
      "qrCodePayload": {
        "type": "string",
        "description": "QR code payload: attendance:{eventId}:{timestamp}"
      },
      "status": {
        "type": "string",
        "enum": ["Active", "Completed", "Cancelled"]
      },
      "createdAt": {
        "type": "string",
        "format": "date-time"
      },
      "updatedAt": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "errorResponses": {
    "400": {
      "description": "Validation error",
      "examples": [
        {
          "error": "Validation failed",
          "details": [
            {
              "field": "startDateTime",
              "message": "startDateTime must be before endDateTime"
            }
          ]
        },
        {
          "error": "Cannot update completed event"
        }
      ]
    },
    "401": {
      "description": "Not authenticated",
      "example": {
        "error": "Authentication required"
      }
    },
    "403": {
      "description": "Insufficient permissions",
      "example": {
        "error": "Only Moderator or Administrator can update events"
      }
    },
    "404": {
      "description": "Event not found",
      "example": {
        "error": "Event not found"
      }
    }
  },
  "businessRules": [
    "Only Moderator or Administrator can update events",
    "Cannot change qrCodePayload directly (immutable)",
    "If venue coordinates change, QR code is automatically regenerated with new timestamp",
    "startDateTime must be before endDateTime if both provided",
    "Cannot update event with Completed status",
    "Cancelled events can be reactivated by changing status to Active",
    "All fields are optional (partial update)",
    "updatedAt timestamp automatically updated on save"
  ],
  "sideEffects": [
    "If venueLatitude or venueLongitude changes, qrCodePayload regenerated with format: attendance:{eventId}:{newTimestamp}",
    "If status changed to Cancelled, all Pending attendance records remain Pending (moderator must manually reject)",
    "If status changed to Completed, event no longer accepts new check-ins"
  ]
}
